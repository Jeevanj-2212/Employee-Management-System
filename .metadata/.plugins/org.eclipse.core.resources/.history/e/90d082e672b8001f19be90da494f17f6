package com.employeeManagement;

import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import java.sql.*;
import javax.swing.border.EmptyBorder;


public class AddEmployee extends JFrame {

    private JPanel contentPane;
    private JTextField textFieldEmpId;
    private JTextField textFieldName;
    private JTextField textFieldSalary;
    private JTextField textFieldEmail;
    private JTextField textFieldPhone;
    private JTextField textFieldAddress;

    // Database connection parameters
    private String url = "jdbc:mysql://localhost:3306/employee_management";
    private String username = "root";
    private String password = "password";

    // Launch the application
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    AddEmployee frame = new AddEmployee();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Create the frame
    public AddEmployee() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 450, 450);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);

        // Label for Add Employee
        JLabel lblNewLabel = new JLabel("Add Employee");
        lblNewLabel.setFont(new Font("Segoe UI Historic", Font.BOLD, 30));
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        lblNewLabel.setBounds(132, 10, 180, 40);
        contentPane.add(lblNewLabel);

        // Label and TextField for Employee ID
        JLabel lblEmpId = new JLabel("Employee ID");
        lblEmpId.setBounds(30, 60, 80, 20);
        contentPane.add(lblEmpId);

        textFieldEmpId = new JTextField();
        textFieldEmpId.setBounds(120, 60, 250, 20);
        contentPane.add(textFieldEmpId);
        textFieldEmpId.setColumns(10);

        // Label and TextField for Name
        JLabel lblName = new JLabel("Name");
        lblName.setBounds(30, 100, 80, 20);
        contentPane.add(lblName);

        textFieldName = new JTextField();
        textFieldName.setBounds(120, 100, 250, 20);
        contentPane.add(textFieldName);
        textFieldName.setColumns(10);

        // Label and TextField for Salary
        JLabel lblSalary = new JLabel("Salary");
        lblSalary.setBounds(30, 140, 80, 20);
        contentPane.add(lblSalary);

        textFieldSalary = new JTextField();
        textFieldSalary.setBounds(120, 140, 250, 20);
        contentPane.add(textFieldSalary);
        textFieldSalary.setColumns(10);

        // Label and TextField for Email
        JLabel lblEmail = new JLabel("Email");
        lblEmail.setBounds(30, 180, 80, 20);
        contentPane.add(lblEmail);

        textFieldEmail = new JTextField();
        textFieldEmail.setBounds(120, 180, 250, 20);
        contentPane.add(textFieldEmail);
        textFieldEmail.setColumns(10);

        // Label and TextField for Phone
        JLabel lblPhone = new JLabel("Phone");
        lblPhone.setBounds(30, 220, 80, 20);
        contentPane.add(lblPhone);

        textFieldPhone = new JTextField();
        textFieldPhone.setBounds(120, 220, 250, 20);
        contentPane.add(textFieldPhone);
        textFieldPhone.setColumns(10);

        // Label and TextField for Address
        JLabel lblAddress = new JLabel("Address");
        lblAddress.setBounds(30, 260, 80, 20);
        contentPane.add(lblAddress);

        textFieldAddress = new JTextField();
        textFieldAddress.setBounds(120, 260, 250, 20);
        contentPane.add(textFieldAddress);
        textFieldAddress.setColumns(10);

        // Add Employee Button
        JButton btnAddEmployee = new JButton("Add Employee");
        btnAddEmployee.setBounds(150, 300, 150, 30);
        contentPane.add(btnAddEmployee);

        // Add ActionListener to the button
        btnAddEmployee.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    // Get the employee details from the text fields
                    String empIdStr = textFieldEmpId.getText();  // Get Employee ID (String)
                    int empId = Integer.parseInt(empIdStr);      // Convert to int

                    String name = textFieldName.getText();
                    String salaryStr = textFieldSalary.getText();
                    int salary = Integer.parseInt(salaryStr);    // Convert Salary to int
                    String email = textFieldEmail.getText();
                    String phone = textFieldPhone.getText();
                    String address = textFieldAddress.getText();

                    // Call the insert method with the correct parameters
                    insertEmployeeData(empId, name, salary, email, phone, address);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(AddEmployee.this, "Please enter valid data.", "Input Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }

    // Method to insert employee data into the database
    private void insertEmployeeData(int empId, String name, int salary, String email, String phone, String address) {
        String sql = "INSERT INTO employee (emp_id, name, salary, email, phone, address) VALUES (?, ?, ?, ?, ?, ?)";

        try (Connection con = DriverManager.getConnection(url, username, password)) {
            PreparedStatement pstmt = con.prepareStatement(sql);

            // Set the values for the statement
            pstmt.setInt(1, empId);  // Set emp_id as integer
            pstmt.setString(2, name);
            pstmt.setInt(3, salary);  // Set salary as integer
            pstmt.setString(4, email);
            pstmt.setString(5, phone);
            pstmt.setString(6, address);

            // Execute the query
            int rowsInserted = pstmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Employee added successfully.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while adding the employee.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
